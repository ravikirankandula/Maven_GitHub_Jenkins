package scripts.ActivityFeed;

import org.apache.commons.lang3.RandomStringUtils;
import org.testng.annotations.AfterClass;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

import actions.Actions;
import objRepository.Global;
import objRepository.Social.ActivityFeed;
import reusableMethods.RM_Social;
import utility.Utility;

public class Ts_PostToTagGroupFromFeedPage_13262 {
	
	private Utility utl;
	//ExtentTest logger;

		@BeforeClass
		public void setUp()
		{
			 utl=new Utility();
			 //logger=
			 utl.initTest(this.getClass().getName().substring(this.getClass().getName().lastIndexOf(".")+1).trim());
			 new Actions();
		
		}
		@AfterMethod
		public void logOutAndBrowserClose()
		{
			Actions.logOutAndBrowserCloseMU();
		}
		@AfterClass
		public void endReport() throws Exception
		{
			Actions.endScriptReportMU();
			
			
		}
		String time=RandomStringUtils.randomNumeric(4);
		private  String groupName="TestGroup"+time;
		@Test
		public void createGroup(){
			Global.login(Utility.getConfigData().get("USER7"), Utility.getConfigData().get("PASSWORD"));
			//Actions.pause(3);
			RM_Social.createGroup(groupName);
			Actions.pause(3);
			RM_Social.inviteToGroup(Utility.getTestData().get("FULLNAME_USER9"));
			
		}
		@Test(dependsOnMethods={"createGroup"})
		public void acceptGroupInviteRequest()
		{
			Global.login(Utility.getConfigData().get("USER9"), Utility.getConfigData().get("PASSWORD"));
			//Actions.pause(3);
			RM_Social.acceptConnectionRequest();
			
		}
		@Test(dependsOnMethods={"acceptGroupInviteRequest"})
		public void postMessage()
		{
			Global.login(Utility.getConfigData().get("USER7"), Utility.getConfigData().get("PASSWORD"));
			//Actions.pause(3);
			RM_Social.navigateToActivityPage();
			Actions.click(ActivityFeed.privacyLink, "Open Privacy List");
			RM_Social.selectPrivacyInAFP(Utility.getTestData().get("PRIVACY_TAGGEDUSERSANDGROUPS"));
			RM_Social.tagUserInAFP(groupName);
			RM_Social.typeMessageInAFP(Utility.getTestData().get("POSTMSG")+time);
			RM_Social.clickOnPostBtnInAFP();
			RM_Social.clickOnActivityFeed();
			//Actions.switchtoFrame(Global.socialCLFrame, "Switch to Social Frame");
			Actions.verify(ActivityFeed.msgContainer, groupName+Utility.getTestData().get("POSTMSG")+time);
			
		}
		@Test(dependsOnMethods={"postMessage"})
		public void verifyMessage()
		{
			
				
			Global.login(Utility.getConfigData().get("USER9"), Utility.getConfigData().get("PASSWORD"));
			RM_Social.navigateToActivityPage();
			Actions.pause(2);
			Actions.verify(ActivityFeed.msgContainer, groupName+Utility.getTestData().get("POSTMSG")+time);
			
		
		}
		
	
	

}
