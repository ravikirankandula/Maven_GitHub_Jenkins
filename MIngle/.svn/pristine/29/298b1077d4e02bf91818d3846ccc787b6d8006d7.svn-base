package scripts.ShellHeader;

import org.apache.commons.lang3.RandomStringUtils;

import org.openqa.selenium.WebDriver;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

import com.relevantcodes.extentreports.ExtentTest;

import actions.Actions;
import objRepository.Global;
import objRepository.Social.AppMenu;
import objRepository.Streams.Streams;
import reusableMethods.RM_Social;
import reusableMethods.RM_Streams;
import utility.Utility;

public class Ts_ShareMsgToRunningStream_13237 {
	WebDriver driver;
	ExtentTest logger;
	Global global;
	AppMenu homePage;
	Streams streams;
	private Utility utl;
	// ExtentTest logger;

	@BeforeClass
	public void setUp() {
		utl = new Utility();
		// logger=
		utl.initTest(this.getClass().getName().substring(this.getClass().getName().lastIndexOf(".")+1).trim());
		new Actions();

	}

	@AfterMethod
	public void logOutAndBrowserClose() {
		try {
			rb();
		} catch (Exception e) {
			// TODO Auto-generated catch block

		}
		Actions.logOutAndBrowserClose();
	}
	String time=RandomStringUtils.randomNumeric(4);
	String templateName=Utility.getTestData().get("TEMPLATENAME")+time;
	@Test
	public void createStream() throws InterruptedException {
		//String time = Utility.getTime();
		String templateDesc = Utility.getTestData().get("TEMPLAEDESC");
		String tag1 = Utility.getTestData().get("TAG1");
		String tag2 = Utility.getTestData().get("TAG2");
		String streamOwner = Utility.getTestData().get("STREAMOWNER");
		String internalParticipant = Utility.getTestData().get("STREAMPARTICIPANT");
		String stepName = Utility.getTestData().get("STEPNAME");
		String stepDesc = Utility.getTestData().get("STEPDESC");
		Global.login(Utility.getConfigData().get("USER6"), Utility.getConfigData().get("PASSWORD"));
		// Create Template with One step and Save
		RM_Streams.createTemplateWithOneStep(templateName, templateDesc, tag1, tag2, streamOwner, internalParticipant,
				stepName, stepDesc);
		// Create Stream & Start the Stream
		RM_Streams.createStream(templateName);
		// Share Post to Running Stream
		Actions.switchToDefaultContent();
		RM_Social.openShellHeaderShareOverlay();
		Actions.switchtoFrame(Global.mingleCLFrame, "Switch to Mingle Frame");
		RM_Social.selectPrivacyInShellHeaderShareOverlayToRunningStream(templateName);
		RM_Social.typeMessageInShellHeaderShareOverlay(Utility.getTestData().get("POSTMSG") + time);
		RM_Social.clickOnShareBtn();
		Actions.switchToDefaultContent();
		RM_Social.navigateToActivityPage();
		RM_Streams.navigateToStreams();
		RM_Streams.click_Streams();
		RM_Streams.select_CreatedTemplate(templateName);
		Actions.click(Streams.viewAllActivities_icon, "Click On 'View All Activities' icon");
		String actualMsg = Actions.getText(Streams.viewAllActivities_TextArea);
		Actions.verifyString(actualMsg, Utility.getTestData().get("POSTMSG") + time);
		

	}

	public void rb() {
		Actions.switchToDefaultContent();
		// Delete Stream
		RM_Streams.delete_Template(templateName);
		// Delete Stream
		RM_Streams.navigateToStreams();
		RM_Streams.select_CreatedTemplate(templateName);
		RM_Streams.deleteStream();
		Global.acceptConfirmation();
	}

}
