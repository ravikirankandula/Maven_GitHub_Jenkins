package scripts.ActivityFeed;

import org.apache.commons.lang3.RandomStringUtils;
import org.testng.annotations.AfterClass;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

import actions.Actions;
import objRepository.Global;
import objRepository.Social.ActivityFeed;
import reusableMethods.RM_Social;
import utility.Utility;

public class Ts_PostToGroupFromFeedPage_12752 {

	private Utility utl;
	//ExtentTest logger;

		@BeforeClass
		public void setUp()
		{
			 utl=new Utility();
			 //logger=
			 utl.initTest(this.getClass().getName().substring(this.getClass().getName().lastIndexOf(".")+1).trim());
			 new Actions();
		
		}
		@AfterMethod
		public void logOutAndBrowserClose()
		{
			Actions.logOutAndBrowserCloseMU();
		}
		@AfterClass
		public void endReport() throws Exception
		{
			Actions.endScriptReportMU();
			
			
		}
		String time=RandomStringUtils.randomNumeric(4);
		private String groupName=Utility.getTestData().get("GROUP_NAME")+time;
		private String postMsg=Utility.getTestData().get("POSTMSG")+time;
		@Test
		public void createGroup(){
			Global.login(Utility.getConfigData().get("USER26"), Utility.getConfigData().get("PASSWORD"));
			//Actions.pause(3);
			RM_Social.createGroup(groupName);
			RM_Social.clickOnActivityFeed();
			RM_Social.selectPrivacyInAFPToGroup(groupName);
			Actions.type(ActivityFeed.textArea, postMsg, "Enter post message");
			Actions.click(ActivityFeed.postButton, "Click on post button");
			RM_Social.verifyMessage(postMsg);
		}
		

}
