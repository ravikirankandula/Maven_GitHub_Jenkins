package scripts.IONAPI;

import java.io.File;
import java.util.HashMap;

import org.apache.commons.lang3.RandomStringUtils;
import org.openqa.selenium.WebDriver;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;

import com.relevantcodes.extentreports.ExtentTest;

import actions.Actions;
import objRepository.Global;
import reusableMethods.RM_IONAPI;
import utility.Utility;

public class Ts_IONAPIImport_14771 {
	WebDriver driver;
	ExtentTest logger;
	Global global;
	HashMap<String, String> testData=Utility.getTestData();

	HashMap<String, String> configData=Utility.getConfigData();

	//TESTDATA
	String userName=configData.get("USER14");	
	String pwd=configData.get("PASSWORD");
	String name=testData.get("TD_IONAPI_PROVISONEDSUITE_APPNAME");
	String suiteName=testData.get("TD_IONAPI_PROVISIONEDSUITE_ENDPOINT_DEPLOYMENT");
	String apiContext=testData.get("TD_IONAPI_INFORSUITE_CONTEXT")+RandomStringUtils.randomNumeric(3);
	String desc=testData.get("IONAPI_ANDROIDEDIT");
	String targetUrl=testData.get("TD_IONAPI_INFORSUITETARGETENDPOINTURL");
	String proxyUrl=testData.get("TD_IONAPI_INFORSUITEPROXYENDPOINT");
	String targetEndPoint=testData.get("TD_IONAPI_PROVISIONEDSUITE_ACCESSKEY");
	String secretKey=testData.get("TD_IONAPI_PROVISIONEDSUITE_SECRETEKEY");
	String targetEndPointDetails=testData.get("TD_IONAPI_INFORSUITEEDITEDENDPOINTURL");


	String proxyendPointURL=testData.get("TD_IONAPI_INFORSUITEPROXYENDPOINTRUL1");

	String location=testData.get("TD_IONAPI_PROVISIONEDSUITE_ENDPOINT_DEPLOYMENTCONTEXT");
	String editedSuite=testData.get("TD_IONAPI_INOREDITEDSUITE");
	String editedDesc=testData.get("TD_IONAPI_INOREDITEDSUITEDESC");
	String applicationName=suiteName+RandomStringUtils.randomNumeric(3);


	private Utility utl;

	public static String className;
	@BeforeClass
	public void setUp()
	{    

		utl=new Utility();
		logger=utl.initTest(this.getClass().getName().substring(this.getClass().getName().lastIndexOf(".")+1).trim());
		className=this.getClass().getName().toString();
		new Actions();
	}
	@AfterClass
	public void tearDown()

	{
		 String path=Utility.RpPath+"\\Downloads\\"; 
	        File file = new File(path);
	        File[] files = file.listFiles(); 
	        for (File f:files) 
	        {if (f.isFile() && f.exists()) 
	            { f.delete();
	System.out.println("successfully deleted");
	            }else{
	System.out.println("cant delete a file due to open or error");
	} } 
		
	Utility.report.endTest(logger);
	Utility.report.flush();
	
	}


	@org.testng.annotations.Test
	public void test() {
		try{


			//LOGIN
			Global.login(userName,pwd);
			RM_IONAPI.IONAPI_IMPORT(name, applicationName, apiContext, desc, targetUrl, proxyUrl, targetEndPoint, secretKey,"Non-Infor Suites",applicationName);

			RM_IONAPI.delete_SuiteDetails("Non-Infor Suites",applicationName);
		}
		catch (Exception e) {
			Utility.addClass(className);
			// TODO: handle exception
		}
		finally{
			try{
				//LOGOUT
				Global.logOut();
			}
			catch (Exception e) {
				// TODO: handle exception
			}
			finally{
				//DRIVER CLOSE
				Actions.driverClose();
			}
		}
	}
}
