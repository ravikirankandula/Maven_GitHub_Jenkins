package scripts.ActivityFeed;

import org.apache.commons.lang3.RandomStringUtils;
import org.openqa.selenium.By;
import org.testng.annotations.AfterClass;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

import actions.Actions;
import objRepository.Global;
import objRepository.Social.ActivityFeed;
import reusableMethods.RM_Social;
import utility.Utility;

public class Ts_LikeAndUnlikePostFromActivityFeedPage_13265 {

	private Utility utl;
	//ExtentTest logger;

	static boolean rerun=false;
	public static String className;
	@BeforeClass
	public void setUp()
	{
		utl=new Utility();
		utl.initTest(this.getClass().getName().substring(this.getClass().getName().lastIndexOf(".")+1).trim());
		className=this.getClass().getName().toString();
		new Actions();
	}
		@AfterMethod
		public void logOutAndBrowserClose()
		{
			Actions.logOutAndBrowserCloseMU();
		}
		@AfterClass
		public void endReport() 
		{
			if(rerun)
			{
				Utility.addClass(className);
			}
			Actions.endScriptReportMU();
			
			
		}
		String time=RandomStringUtils.randomNumeric(4);
		String postMsg=Utility.getTestData().get("POSTMSG")+time;
		@Test
		public void postMsg()
		{
		
			try {
				Global.login(Utility.getConfigData().get("USER7"), Utility.getConfigData().get("PASSWORD"));
				//Actions.pause(3);
				RM_Social.navigateToActivityPage();
				Actions.click(ActivityFeed.privacyLink, "Open Privacy List");
				RM_Social.selectPrivacyInAFP(Utility.getTestData().get("PRIVACY_CONNECTEDUSERS"));
				RM_Social.typeMessageInAFP(Utility.getTestData().get("POSTMSG")+time);
				RM_Social.clickOnPostBtnInAFP();
				RM_Social.clickOnActivityFeed();
				//Actions.switchtoFrame(Global.socialCLFrame, "Switch to Social Frame");
				//Actions.verify(ActivityFeed.msgContainer, Utility.getTestData().get("POSTMSG")+time);
				RM_Social.verifyMessage(postMsg);
				RM_Social.likePost(postMsg);
				RM_Social.unLikePost(postMsg);
			} catch (Exception e) {
				rerun=true;
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		@Test(dependsOnMethods={"postMsg"})
		public void likePost()
		{
			try {
				Global.login(Utility.getConfigData().get("USER12"), Utility.getConfigData().get("PASSWORD"));
				//Actions.pause(3);
				RM_Social.navigateToActivityPage();
				RM_Social.likePost(postMsg);
			} catch (Exception e) {
				rerun=true;
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
		}
		@Test(dependsOnMethods={"likePost"})
		public void verifyLikePost()
		{
			try {
				Global.login(Utility.getConfigData().get("USER7"), Utility.getConfigData().get("PASSWORD"));
				//Actions.pause(3);
				RM_Social.navigateToActivityPage();
				Actions.verifyElement(By.xpath("//div[text()='"+postMsg+"']/ancestor::div[@data-bind-id='tbl-msg']/descendant::span[contains(normalize-space(.),'1 people like this')]"), "1 People like this");
			} catch (Exception e) {
				rerun=true;
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
		}
	
	
}
