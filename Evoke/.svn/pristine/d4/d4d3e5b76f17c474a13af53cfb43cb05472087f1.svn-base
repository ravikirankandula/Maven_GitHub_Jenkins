package scripts.ShellHeader;

import org.apache.commons.lang3.RandomStringUtils;
import org.openqa.selenium.By;
import org.testng.annotations.AfterClass;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

import actions.Actions;
import objRepository.Global;
import objRepository.Social.ActivityFeed;
import objRepository.Social.Directory;
import objRepository.Social.ShellHeader;
import objRepository.Social.ShellHeaderShareOverlay;
import reusableMethods.RM_Social;
import utility.Utility;


public class Ts_SharePostToTaggedUsers_13235 {

	private Utility utl;
	//ExtentTest logger;

		@BeforeClass
		public void setUp()
		{
			 utl=new Utility();
			 //logger=
			 utl.initTest(this.getClass().getName().substring(this.getClass().getName().lastIndexOf(".")+1).trim());
			 new Actions();
		
		}
		@AfterMethod
		public void logOutAndBrowserClose()
		{
			Actions.logOutAndBrowserCloseMU();
		}
		@AfterClass
		public void endReport() throws Exception
		{
			Actions.endScriptReportMU();
			
			
		}
		String time=RandomStringUtils.randomNumeric(4);
		private static String tagUserFullName;
		@Test
		public void postMessage()
		{
			tagUserFullName=Utility.getTestData().get("FULLNAME_USER23");
			Global.login(Utility.getConfigData().get("USER21"), Utility.getConfigData().get("PASSWORD"));
			Actions.pause(3);
			RM_Social.openShellHeaderShareOverlay();
			//Actions.switchtoFrame(Global.mingleCLFrame, "Switch to Mingle Frame");
			Actions.click(ShellHeaderShareOverlay.privacyLink, "Open Privacy List");
			RM_Social.selectPrivacyInShellHeaderShareOverlay(Utility.getTestData().get("PRIVACY_TAGGEDUSERSANDGROUPS"));
			Actions.click(ShellHeaderShareOverlay.textArea, "Click On Text Area");
			Actions.clearText(ShellHeaderShareOverlay.textArea, "Clear Text in Text Area");
			RM_Social.tagUserInShellHeaderShareOverlay(tagUserFullName);
			RM_Social.typeMessageInShellHeaderShareOverlay(Utility.getTestData().get("POSTMSG")+time);
			RM_Social.clickOnShareBtn();
			Global.minglePageLoad_Social();
			Actions.switchToDefaultContent();
			RM_Social.navigateToActivityPage();
			//Actions.switchtoFrame(Global.socialCLFrame, "Switch to Social Frame");
			//Actions.verify(ActivityFeed.msgContainer, tagUserFullName+Utility.getTestData().get("POSTMSG")+time);
			
			//Actions.verifyString(Actions.getText(By.xpath("//div[@class='infor-social-feedTextWrapper m-txt-f5']")),tagUserFullName+" "+Utility.getTestData().get("POSTMSG")+time);
			RM_Social.verifyMessage(Utility.getTestData().get("POSTMSG")+time,tagUserFullName);
		}
		@Test(dependsOnMethods={"postMessage"})
		public void verifyMessage()
		{
			
				
			Global.login(Utility.getConfigData().get("USER23"), Utility.getConfigData().get("PASSWORD"));
			RM_Social.navigateToActivityPage();
			Actions.pause(2);
			//Actions.verify(ActivityFeed.msgContainer, tagUserFullName+Utility.getTestData().get("POSTMSG")+time);
			RM_Social.verifyMessage(Utility.getTestData().get("POSTMSG")+time,tagUserFullName);
			//Actions.verifyString(Actions.getText(By.xpath("//div[@class='infor-social-feedTextWrapper m-txt-f5']")),tagUserFullName+" "+Utility.getTestData().get("POSTMSG")+time);
			
			
		
		}
		@Test(dependsOnMethods={"verifyMessage"})
		public void verifyMessage2()
		{
			
				
			    Global.login(Utility.getConfigData().get("USER10"), Utility.getConfigData().get("PASSWORD"));
				RM_Social.navigateToActivityPage();
				//Actions.verifyElementNotPresent(ActivityFeed.msgContainer, tagUserFullName+Utility.getTestData().get("POSTMSG")+time);
				RM_Social.verifyMessageNotDisplayed(tagUserFullName+Utility.getTestData().get("POSTMSG")+time);
				
				
		
		}
	
	
}
