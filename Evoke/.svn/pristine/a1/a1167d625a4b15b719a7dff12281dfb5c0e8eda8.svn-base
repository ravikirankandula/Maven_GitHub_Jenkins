package scripts.IFS;

import java.util.HashMap;

import org.apache.commons.lang3.RandomStringUtils;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;

import com.relevantcodes.extentreports.ExtentTest;

import actions.Actions;
import objRepository.Global;
import reusableMethods.RM_IFS_Trial10;
import utility.Utility;

public class Ts_ContactGroup_12699
{
	ExtentTest logger;
	private Utility utl;
	 HashMap<String, String> testData=Utility.getTestData();
	 HashMap<String, String> configData=Utility.getConfigData();
		
		//TESTDATA
		 String userName=configData.get("USER1");
		 String pwd=configData.get("PASSWORD");
		 String email=configData.get("USER7");
		 String fullName=testData.get("CONTACT_FULLNAME");
		 String contactID=testData.get("CONTACT_ID");
		 String groupname=testData.get("CONTACT_GROUPNAME")+RandomStringUtils.randomNumeric(3);
		 String desc=testData.get("CONTACT_GROUPDESC");
	
	
		 public static String className;
		    static boolean rerun=false;
			@BeforeClass
			public void setUp()
			{    
				
				 utl=new Utility();
				 logger=utl.initTest(this.getClass().getName().substring(this.getClass().getName().lastIndexOf(".")+1).trim());
				 className=this.getClass().getName().toString();
				 new Actions();
			}
	@AfterClass
	public void tearDown()
	{
		Utility.report.endTest(logger);
		//Actions.driverClose();
	
	}
	


	@org.testng.annotations.Test(priority =1)
	public void CreateContactGroupAssignContacts()
	 {
		try {
			
	    //login
		Global.login(userName,pwd);
		RM_IFS_Trial10.create_Contact(fullName,email,contactID);
		Actions.switchToDefaultContent();
		RM_IFS_Trial10.create_ContactGroups(groupname, desc);
		
		//RM_IFS_Trial10.assosciate_ContactGroup(fullName, groupname);
		//Actions.switchToDefaultContent();
		RM_IFS_Trial10.verify_ContactsGroupsinContacts(groupname, fullName);
		
         } catch (Exception e) {
        	 Utility.addClass(className);
		}finally
		{
			try{
			Global.logOut();
			}
			catch (Exception e) {
				// TODO: handle exception
			}
			finally{
			Actions.driverClose();
			}
			
		}
		
     }
	
}
